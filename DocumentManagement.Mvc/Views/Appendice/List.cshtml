
@{
    ViewBag.Title = "Danh sách phụ lục tài liệu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link rel="stylesheet" href="/Scripts/jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="/Scripts/jqwidgets/styles/jqx.light.css" type="text/css" />
}
<div class="row">
    <div class="col-xs-12">
        <div class="box box-info">
            <div class="box-header">
                <h3 class="box-title">@L(DocumentResourceNames.AppendiceList)</h3>
                <div class="box-tools pull-right">
                </div>
                <div class="mailbox-controls form-inline">
                    <div class="btn-group">
                        <!-- Check all button -->
                        <a href="@Url.ActionWithHost("DataExport", "ExportAllAirTicketToExcel")" class="btn btn-success btn-sm"><i class="fa fa-file-excel-o"></i> @Ls(DTWebConsts.LocalizationSourceName, DTWebResourceNames.ExportToExcel)</a>
                        <a href="@Url.Action("Create")" class="btn btn-success btn-sm">
                            <i class="fa fa-plus" aria-hidden="true"></i> @Ls(DTWebConsts.LocalizationSourceName, DTWebResourceNames.AddNew)
                        </a>
                    </div>
                    <div class="box-tools pull-right">
                        <div class="input-group pull-right">
                            <div class="input-group-addon">
                                <i id="code-help"
                                   class="fa fa-info-circle red-text"
                                   data-toggle="tooltip"
                                   data-placement="bottom"
                                   title="Chọn tìm kiếm nâng cao sẽ tìm kiếm thông tin liên quan trong file đính kèm. Lưu ý: sẽ lâu hơn tìm kiếm thông tin bình thường"></i>
                            </div>
                            <input id="txtSearch"
                                   class="form-control"
                                   placeholder="@Ls(DTWebConsts.LocalizationSourceName, DTWebResourceNames.Search)" />

                            <div class="input-group-addon" style="width: 100px">
                                <label class="checkbox-inline" style="padding-left: 0px">
                                    <span class="form-group inline-block">
                                        <input type="checkbox" id="AdvancedSearch" /> Nâng cao
                                    </span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div id='jqxWidget'>
                        <div id="grdDocument"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        const hostUrl = '@Url.GetHost()';
    </script>
    <!--Auto numeric-->
    <script src="~/Scripts/autoNumeric-1.9.41.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxdata.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxbuttons.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxscrollbar.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxmenu.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxgrid.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxgrid.edit.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxgrid.selection.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxgrid.columnsresize.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxlistbox.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxdropdownlist.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxcheckbox.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxtextarea.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxcalendar.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxnumberinput.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxdatetimeinput.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxgrid.pager.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxgrid.sort.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxinput.js"></script>
    <script type="text/javascript" src="/Scripts/jqwidgets/jqxgrid.grouping.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/globalization/globalize.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/localization.js"></script>
    <script type="text/javascript" src="~/Scripts/demos.js"></script>
    <script type="text/javascript">
        Globalize.cultureSelector = '@CurrentLanguage.Name';
    </script>
    <script>
        const uploadFileRootPath = '/Uploads';
        const updateDocumentUrl = `${hostUrl}/document/update`;
        const documentCodeText = '@L(DocumentResourceNames.Code)';
        const documentNameText = '@L(DocumentResourceNames.Name)';
        const companyText = '@L(DocumentResourceNames.CompanyCode)';
        const departmentText = '@L(DocumentResourceNames.DepartmentCode)';
        const moduleText = '@L(DocumentResourceNames.Module)';
        const documentNumberText = '@L(DocumentResourceNames.DocumentNumber)';
        const reviewNumberText = '@L(DocumentResourceNames.ReviewNumber)';
        const documentTypeText = '@L(DocumentResourceNames.DocumentType)';
    </script>
    <script>
        const txtSearch = $('#txtSearch');
        const grdDocument = $("#grdDocument");
        txtSearch.on("keyup", function (e) {
            const key = event.charCode ? event.charCode : event.keyCode ? event.keyCode : 0;
            if (key === 13) {
                grdDocument.jqxGrid('updatebounddata');
                grdDocument.jqxGrid('gotopage', 0);
            }
        });

        let documents = [];

        let source =
        {
            url: '@Url.ActionApiWithHost("appendices", "searchappendicesbytokenpaged")',
            datatype: "json",
            id: "id",
            updaterow: function (rowid, rowdata, commit) {
                // synchronize with the server - send update command
                // call commit with parameter true if the synchronization with the server is successful
                // and with parameter false if the synchronization failder.
                commit(true);
            },
            cache: false,
            pagesize: 20,
            sort: function () {
                // update the grid and send a request to the server.
                grdDocument.jqxGrid('updatebounddata', 'sort');
            },
            pagesizeoptions: ["20", "40", "60"],
            datafields:
                [
                    { name: 'id', type: 'int' },
                    { name: 'code', type: 'string' },
                    { name: 'companyName', type: 'string' },
                    { name: 'departmentName', type: 'string' },
                    { name: 'module', type: 'string' },
                    { name: 'documentType', type: 'string' },
                    { name: 'name', type: 'string' },
                    { name: 'documentNumber', type: 'string' },
                    { name: 'reviewNumber', type: 'string' },
                    { name: 'description', type: 'string' },
                    { name: 'fileName', type: 'string' },
                    { name: 'folderName', type: 'string' },
                    { name: 'contentChange', type: 'string'}
                ],
            root: 'data',
            beforeprocessing: function (data) { source.totalrecords = data.total; }
        };
        let dataAdapter = new $.jqx.dataAdapter(source,
            {
                beforeSend: function (jqXHR, settings) {
                    settings.url = `${settings.url}&token=${txtSearch.val()}&advancedSearch=${$('#AdvancedSearch').val()}`;
                    jqXHR.setRequestHeader('token', txtSearch.val());
                    jqXHR.setRequestHeader('advancedSearch', $('#AdvancedSearch').val());
                }
            });

        function initGrid() {

            grdDocument.jqxGrid(
                {
                    width: '100%',
                    height: 600,
                    source: dataAdapter,
                    pageable: true,
                    autorowheight: true,
                    columnsresize: true,
                    altrows: true,
                    editable: true,
                    sortable: true,
                    groupable: true,
                    pagesizeoptions: ["20", "40", "60"],
                    localization: getLocalization('@CurrentLanguage.Name'),
                    selectionmode: 'singlerow',
                    editmode: 'singlecell',
                    showstatusbar: false,
                    virtualMode: true,
                    renderGridRows: function (obj) {
                        return obj.data;
                    },
                    columns: [
                        {
                            text: 'STT',
                            sortable: false,
                            filterable: false,
                            editable: false,
                            groupable: false,
                            draggable: false,
                            pinned: true,
                            datafield: '',
                            columntype: 'number',
                            width: 30,
                            cellsrenderer: function (row, column, value) {
                                return "<div style='margin:4px;'>" + (value + 1) + "</div>";
                            }
                        },
                        {
                            text: documentCodeText,
                            columntype: 'textbox',
                            datafield: 'code',
                            pinned: true,
                            editable: false,
                            width: 100,
                            cellsrenderer: function (row, column, value, defaultHtml) {
                                const element = $(defaultHtml);
                                element.html(`<a href="${updateDocumentUrl}?id=${dataAdapter.records[row].id}"> <i class="fa fa-pencil"></i> ${value} </a>`);
                                return element[0].outerHTML;
                            }
                        },
                        {
                            text: 'Files',
                            columntype: 'textbox',
                            datafield: 'fileName',
                            pinned: true,
                            editable: false,
                            width: 250,
                            cellsrenderer: function (row, column, value, defaultHtml) {
                                const element = $(defaultHtml);
                                const fileNames = value.split(';');
                                const folderName = dataAdapter.records[row].folderName;
                                if (!isVariableHaveDefaltVal(fileNames)
                                    && !isVariableHaveDefaltVal(folderName)) {
                                    if (fileNames.length > 0) {
                                        let html = '';
                                        for (let index = 0; index < fileNames.length; index++) {
                                            if (!isVariableHaveDefaltVal(fileNames[index])) {
                                                const filePath = `${uploadFileRootPath}/${folderName}/${fileNames[index]}`;
                                                let fileIcon = 'fa fa-file-o';
                                                switch (getFileExtension(fileNames[index])) {
                                                    case 'pdf':
                                                        fileIcon = 'fa fa-file-pdf-o';
                                                        break;
                                                    case 'xls':
                                                        fileIcon = 'fa fa-file-excel-o';
                                                        break;
                                                    case 'xlsx':
                                                        fileIcon = 'fa fa-file-excel-o';
                                                        break;
                                                    case 'doc':
                                                        fileIcon = 'fa fa-file-word-o';
                                                        break;
                                                    case 'docx':
                                                        fileIcon = 'fa fa-file-word-o';
                                                        break;
                                                }
                                                html = html + `<a target="_blank" href="${filePath}?"> <i class="${fileIcon}"></i> ${fileNames[index]}</a><br>`;
                                            }
                                        }
                                        if (!isVariableHaveDefaltVal(html)) {
                                            element.html(html);
                                        }
                                    }
                                }
                                return element[0].outerHTML;
                            }
                        },
                        {
                            text: documentNameText,
                            columntype: 'textbox',
                            datafield: 'name',
                            pinned: true,
                            editable: false,
                            width: 200
                        },
                        {
                            text: companyText,
                            columntype: 'textbox',
                            datafield: 'companyName',
                            pinned: false,
                            editable: false,
                            width: 150
                        },
                        {
                            text: departmentText,
                            columntype: 'textbox',
                            datafield: 'departmentName',
                            pinned: false,
                            editable: false,
                            width: 150
                        },
                        {
                            text: moduleText,
                            columntype: 'textbox',
                            datafield: 'module',
                            editable: false,
                            width: 150
                        },
                        {
                            text: documentTypeText,
                            columntype: 'textbox',
                            datafield: 'firstName',
                            editable: false,
                            width: 150
                        },
                        {
                            text: documentNumberText,
                            columntype: 'textbox',
                            datafield: 'documentNumber',
                            editable: false,
                            width: 150
                        },
                        {
                            text: reviewNumberText,
                            datafield: 'reviewNumber',
                            editable: false,
                            width: 150
                        }
                    ]
                });
        }
        $(document).ready(function () {
            $('#AdvancedSearch').jqxCheckBox({ width: '90px', height: '20px' });
            $('#AdvancedSearch').jqxCheckBox('uncheck');

            $('#AdvancedSearch').on('change', function (event) {
                grdDocument.jqxGrid('updatebounddata');
                grdDocument.jqxGrid('gotopage', 0);
            });

            initGrid();
        });

    </script>
}