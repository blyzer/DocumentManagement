@model DocumentManagement.Mvc.Models.Documents.DocumentUpdateModel
@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link rel="stylesheet" href="/Scripts/jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="/Scripts/jqwidgets/styles/jqx.light.css" type="text/css" />
    <!-- Select2 -->
    <link rel="stylesheet" href="~/Scripts/admin_lte/bower_components/select2/dist/css/select2.min.css">
    <link rel="stylesheet" href="~/Content/jquery.fileupload-ui.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/jquery.fileupload.css" type="text/css" />
}
<div class="box box-info">
    <form role="form" action="/" id="formDocument">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        <div class="box-header with-border">
            <h3 class="box-title">@L(DocumentResourceNames.UpdateDocument)</h3>
            <div class="mailbox-controls">
                <div class="btn-group">
                    <a href="@Url.Action("List")" class="btn btn-success btn-sm">
                        <i class="fa fa-arrow-circle-left" aria-hidden="true"></i> @Ls(DTWebConsts.LocalizationSourceName, DTWebResourceNames.List)
                    </a>
                    <button id="btnSubmit" type="submit" class="btn btn-primary btn-sm">
                        <i class="fa fa-floppy-o" aria-hidden="true"></i> @Ls(DTWebConsts.LocalizationSourceName, DTWebResourceNames.Save)
                    </button>
                </div>
            </div>
        </div>
        <div class="box-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.Code)</label>
                        <input type="text"
                               class="form-control"
                               name="Code"
                               id="Code"
                               value="@Model.Code"
                               readonly />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.Name)</label>
                        <input type="text"
                               class="form-control"
                               name="Name"
                               id="Name"
                               value="@Model.Name" />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.DocumentType)</label>
                        <select type="text"
                                class="form-control"
                                id="DocumentType"
                                name="DocumentType"></select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.CompanyCode)</label>
                        <select type="text"
                                class="form-control"
                                id="CompanyCode"
                                name="CompanyCode"></select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.DepartmentCode)</label>
                        <select type="text"
                                class="form-control"
                                id="DepartmentCode"
                                name="DepartmentCode"></select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.Module)</label>
                        <select type="text"
                                class="form-control"
                                id="Module"
                                name="Module"></select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.DocumentNumber)</label>
                        <input type="text"
                               class="form-control"
                               autocomplete="off"
                               id="DocumentNumber"
                               name="DocumentNumber"
                               value="@Model.DocumentNumber"/>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.ReviewNumber)</label>
                        <input type="text"
                               class="form-control"
                               autocomplete="off"
                               id="ReviewNumber"
                               name="ReviewNumber"
                               value="@Model.ReviewNumber" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.EffectiveDate)</label>
                        <input type="text"
                               class="form-control"
                               autocomplete="off"
                               id="EffectiveDate"
                               name="EffectiveDate"
                                />
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.ReviewDate)</label>
                        <input type="text"
                               class="form-control"
                               autocomplete="off"
                               id="ReviewDate"
                               name="ReviewDate"
                                />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.Drafter)</label>
                        <select class="form-control"
                                id="Drafter"
                                name="Drafter"
                                multiple
                                ></select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.Auditor)</label>
                        <select class="form-control"
                                id="Auditor"
                                name="Auditor"
                                multiple
                                ></select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.Approver)</label>
                        <select type="text"
                                class="form-control"
                                id="Approver"
                                name="Approver"
                                multiple
                                ></select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.DCCAudited)</label>
                        <br>
                        <input type="checkbox"
                               id="DCCAudited"
                               name="DCCAudited"
                                />
                        <input type="hidden"
                               id="DCCAudited"
                               name="DCCAudited" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label>@L(DocumentResourceNames.Description)</label>
                <textarea class="form-control"
                          name="Description"  
                          rows="10"
                          id="Description">@Model.Description></textarea>
            </div>
            <div class="form-group">
                <label>@L(DocumentResourceNames.ContentChange)</label>
                <textarea class="form-control"
                          name="ContentChange"
                          id="ContentChange"
                          rows="10">@Model.ContentChange</textarea>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.ScopeOfApplication)</label>
                        <textarea type="text"
                                  class="form-control"
                                  id="ScopeOfApplication"
                                  name="ScopeOfApplication"
                                  rows="10">@Model.ScopeOfApplication</textarea>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.ScopeOfDeloyment)</label>
                        <select type="text"
                                class="form-control"
                                id="ScopeOfDeloyment"
                                name="ScopeOfDeloyment"
                                multiple></select>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.ReplaceOf)</label>
                        <i id="replaceof-help"
                           class="fa fa-info-circle red-text"
                           data-toggle="tooltip"
                           data-placement="top"
                           title="Được thay thế cho tài liệu nào"></i>
                        <div id="grdReplaceOf"></div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>@L(DocumentResourceNames.RelateToDocuments)</label>
                        <i id="RelateToDocuments-help"
                           class="fa fa-info-circle red-text"
                           data-toggle="tooltip"
                           data-placement="top"
                           title="Các tài liệu liên quan"></i>
                        <div id="grdRelateToDocuments"></div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @if (!string.IsNullOrEmpty(Model.FileName))
                        {
                            <table role="presentation" class="table table-striped">
                                @foreach (var file in Model.FileName.Split(';'))
                                {
                                    <tr>
                                        <td class="name">
                                            <a target="_blank" href="/Uploads/@Model.FolderName/@file"><i class="fa fa-paperclip"></i>@file</a>
                                        </td>
                                        <td>
                                            <button type="button"
                                                    name="btnDeleteCurrentFile"
                                                    data-document="@Model.Id"
                                                    data-file="@file"
                                                    class="btn btn-warning cancel">
                                                <i class="glyphicon glyphicon-ban-circle"></i>
                                                <span>Xóa</span>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </table>
                        }
                        <br />
                        <label>Link files:</label>
                        <i id="LinkFiles-help"
                           class="fa fa-info-circle red-text"
                           data-toggle="tooltip"
                           data-placement="top"
                           title="File tài liệu"></i>
                        <br>
                        <span class="btn btn-success fileinput-button">
                            <i class="glyphicon glyphicon-plus"></i>
                            <span>@L(DocumentResourceNames.SelectFiles)</span>
                            <!-- The file input field used as target for the file upload widget -->
                            <input id="fileupload" type="file" name="files[]" multiple>
                        </span>
                        <table role="presentation" class="table table-striped">
                            <tbody class="files"></tbody>
                        </table>
                        <!-- The template to display files available for upload -->
                        <script id="template-upload" type="text/x-tmpl">
                            {% for (var i=0, file; file=o.files[i]; i++) { %}
                            <tr>
                                <td>
                                    <span class="preview"></span>
                                </td>
                                <td>
                                    {% if (window.innerWidth > 480 || !o.options.loadImageFileTypes.test(file.type)) { %}
                                    <p class="name" data-file="{%=file.name%}" name="fileName">{%=file.name%}</p>
                                    {% } %}
                                    <strong class="error text-danger">{%=file.error%}</strong>
                                </td>
                                <td>
                                    <p class="size">{%=formatFileSize(file.size)%}</p>

                                </td>
                                <td>
                                    <button type="button" name="deleteFile" class="btn btn-warning cancel">
                                        <i class="glyphicon glyphicon-ban-circle"></i>
                                        <span>Xóa</span>
                                    </button>
                                </td>
                            </tr>
                            {% } %}
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        const uploadFileRootPath = '/Uploads';
        const cultureSelector = '@CurrentLanguage.Name';
        const hostUrl = '@Url.GetHost()';

        let departments = [];
        let documentTypes = [];
        let users = [];
        let companies = [];
        let groups = [];
        let modules = [];

        let $Approver = $('#Approver');
        let $Drafter = $('#Drafter');
        let $Auditor = $('#Auditor');
        let $CompanyCode = $('#CompanyCode');
        let $DepartmentCode = $('#DepartmentCode');
        let $CompanyName = $('#CompanyName');
        let $DepartmentName = $('#DepartmentName');
        let $DocumentType = $('#DocumentType');
        let $ScopeOfApplication = $('#ScopeOfApplication');
        let $ScopeOfDeloyment = $('#ScopeOfDeloyment');
        let $Module = $('#Module');

        let $btnSubmit = $('#btnSubmit');
        let storedFiles = [];
    </script>
    <!-- Select 2-->
    <script src="~/Scripts/admin_lte/bower_components/select2/dist/js/select2.full.min.js"></script>
    <!-- InputMask -->
    <script src="/Scripts/admin_lte/plugins/input-mask/jquery.inputmask.js"></script>
    <script src="/Scripts/admin_lte/plugins/input-mask/jquery.inputmask.date.extensions.js"></script>
    <script src="/Scripts/admin_lte/plugins/input-mask/jquery.inputmask.extensions.js"></script>

    <!--Auto numeric-->
    <script src="~/Scripts/autoNumeric-1.9.41.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxcore.js"></script>
    <script type="text/javascript" src="~/Scripts/jqwidgets/jqxcheckbox.js"></script>
    <script src="~/Scripts/jquery.fileupload.js"></script>
    <script src="~/Scripts/tmpl.min.js"></script>
    <script type="text/javascript">
        $('#DCCAudited').jqxCheckBox();
        const uploadTemplate = tmpl('template-upload');
        $(document).ready(function () {
            $('#fileupload').fileupload({
                autoUpload: false,
                disableImageResize: /Android(?!.*Chrome)|Opera/
                    .test(window.navigator.userAgent),
                maxFileSize: 9990000,
                change: function (e, data) {
                    renderUpload(data.files);
                    $('button[name=deleteFile]').click(deleteHandler);
                },
                acceptFileTypes: /(\.|\/)(gif|jpe?g|png|xls|pdf|xslx)$/i
            });
        });

        function renderTemplate(func, files) {
            if (!func) {
                return $();
            }
            var result = func({
                files: files,
                formatFileSize: this._formatFileSize,
                options: this.options
            });
            if (result instanceof $) {
                return result;
            }
            storedFiles = files;
            return $('.files').html(result).children();
        }

        function renderUpload(files) {
            return renderTemplate(
                uploadTemplate,
                files
            );
        }

        function formatFileSize(bytes) {
            if (typeof bytes !== 'number') {
                return '';
            }
            if (bytes >= 1000000000) {
                return (bytes / 1000000000).toFixed(2) + ' GB';
            }
            if (bytes >= 1000000) {
                return (bytes / 1000000).toFixed(2) + ' MB';
            }
            return (bytes / 1000).toFixed(2) + ' KB';
        }

        function deleteHandler(e) {
            e.preventDefault();
            const tr = $(this).closest('tr');
            let fileName = tr.find('p[name=fileName]').data("file");

            for (let i = 0; i < storedFiles.length; i++) {
                if (storedFiles[i].name === fileName) {
                    storedFiles.splice(i, 1);
                    tr.remove();
                    break;
                }
            }
        }
    </script>
    <!--Script get masterdata-->
    <script>
        const getAllDepartmentsUrl = `${hostUrl}/api/masterdatas/getalldepartments`;
        const getAllUsersUrl = `${hostUrl}/api/masterdatas/getallusers`;
        const getAllCompaniesUrl = `${hostUrl}/api/masterdatas/getallcompanies`;
        const getAllDocumentTypesUrl = `${hostUrl}/api/documenttypes/getalldocumenttypes`;
        const getAllGroupsFromActiveDirectoryUrl = `${hostUrl}/api/masterdatas/getallgroupsfromactivedirectory`;
        const getAllModulesUrl = `${hostUrl}/api/modules/getallmodules`;
        const updateDocumentUrl = `${hostUrl}/api/documents/update`;

        // Get departments
        function getAllDepartments() {
            return $.getJSON(getAllDepartmentsUrl,
                function (data) {
                    departments = data.map((department) => {
                        return { id: department.code, text: department.name };
                    });
                });
        }

        // Get Users
        function getAllUsers() {
            return $.getJSON(getAllUsersUrl,
                function (data) {
                    users = data.map((user) => {
                        return { id: user.userName, text: user.text, departmentName: user.departmentName };
                    });
                });
        }

        // Get companies
        function getAllCompanies() {
            return $.getJSON(getAllCompaniesUrl,
                function (data) {
                    companies = data.map((company) => {
                        return { id: company.code, text: company.name };
                    });
                });
        }

        // Get documenttypes
        function getAllDocumentTypes() {
            return $.getJSON(getAllDocumentTypesUrl,
                function (data) {
                    documentTypes = data.map((documentType) => {
                        return { id: documentType.code, text: documentType.name };
                    });
                });
        }

        // Get groups
        function getAllGroupsFromActiveDirectory() {
            return $.getJSON(getAllGroupsFromActiveDirectoryUrl,
                function (data) {
                    groups = data.map((group) => {
                        return { id: group, text: group };
                    });
                });
        }

        // Get modules
        function getAllModules() {
            return $.getJSON(getAllModulesUrl,
                function (data) {
                    modules = data.map((module) => {
                        return { id: module.code, text: module.name };
                    });
                });
        }

        function formatUserResult(user) {
            if (!user.id)
                return user.text;
            const text = user.text;
            const fullName = text;
            const department = user.departmentName;
            return $(`<span>${fullName}</span><div><small style="color: #a5a0a0">@L(DocumentResourceNames.DepartmentName): ${department}</small></div>`);
        }

        function formatUserSelection(user) {
            if (!user.id)
                return user.text;
            const text = user.text;
            return $(`<span>${text}</span>`);
        }

        Promise.all([getAllUsers(),
            getAllDepartments(),
            getAllCompanies(),
            getAllDocumentTypes(),
            getAllGroupsFromActiveDirectory(),
            getAllModules()
        ]).then(() => {
            $Approver.select2({
                data: users,
                templateResult: formatUserResult,
                templateSelection: formatUserSelection
            });

            let approver = '@Model.Approver';
            $Approver.val(approver.split(';')).trigger('change');

            $Drafter.select2({
                data: users,
                templateResult: formatUserResult,
                templateSelection: formatUserSelection
            });

            let drafter = '@Model.Drafter';
            $Drafter.val(drafter.split(';')).trigger('change');

            $Auditor.select2({
                data: users,
                templateResult: formatUserResult,
                templateSelection: formatUserSelection
            });

            let auditor = '@Model.Auditor';
            $Auditor.val(auditor.split(';')).trigger('change');

            $CompanyCode.select2({
                data: companies
            });

            $CompanyCode.val(['@Model.CompanyCode']).trigger('change');

            $DepartmentCode.select2({
                data: departments
            });

            $DepartmentCode.val(['@Model.DepartmentCode']).trigger('change');

            $DocumentType.select2({
                data: documentTypes
            });

            $DocumentType.val(['@Model.DocumentType']).trigger('change');

            $ScopeOfDeloyment.select2({
                data: groups
            });

            let scopeOfDeloyment = '@Model.ScopeOfDeloyment';
            $ScopeOfDeloyment.val(scopeOfDeloyment.split(';')).trigger('change');

            $Module.select2({
                data: modules
            });

            $Module.val(['@Model.Module']).trigger('change');

            // all requests finished successfully
        }).catch(() => {
            // all requests finished but one or more failed
        })

    </script>
    <!--Actions-->
    <script>
        function update() {
            // Create an FormData object
            let formData = $("#formDocument").submit(function (e) {
                e.preventDefault();
                return;
            });
            //formData[0] contain form data only
            // You can directly make object via using form id but it require all ajax operation inside $("form").submit(<!-- Ajax Here   -->)
            formData = new FormData(formData[0]);
            for (var i = 0, len = storedFiles.length; i < len; i++) {
                formData.append('files', storedFiles[i]);
            }

            $.ajax({
                url: updateDocumentUrl,
                type: "POST",
                data: formData,
                contentType: false,
                processData: false,
                cache: false,
                success: function (event, settings, xhr) {
                    xhr.message = {
                        infor: 'Cập nhật tài liệu thành công',
                        returnUrl: `${hostUrl}/document/list`
                    };
                }
            });
        }
    </script>
    <!--Events-->
    <script>
        $(document).ready(function () {
            const enterKeyUp = $.Event("keyup", { keyCode: 13 });

            // Effective date
            $('#EffectiveDate').datepicker({
                language: cultureSelector,
                showOn: 'focus',
                autoclose: true
            });

            $('#EffectiveDate').datepicker('setDate', new Date('@Model.EffectiveDate').toLocaleString(cultureSelector));

            // Review date
            $('#ReviewDate').datepicker({
                language: cultureSelector,
                showOn: 'focus',
                autoclose: true
            });

            $('#ReviewDate').datepicker('setDate', new Date('@Model.ReviewDate').toLocaleString(cultureSelector));

            if (cultureSelector === 'vi-VN') {
                $.validate({
                    language: vietNamese,
                    form: '#formDocument',
                    addValidClassOnAll: true
                });
            } else {
                $.validate({
                    language: cultureSelector,
                    form: '#formDocument',
                    addValidClassOnAll: true
                });
            }

            $("#formDocument").submit(function (e) {
                e.preventDefault();
                update();
            });

            $CompanyCode.on('change', function (e) {
                const selectedCompany = $CompanyCode.select2('data');
                if (!isVariableHaveDefaltVal(selectedCompany)) {
                    $CompanyName.val(selectedCompany[0].text);
                }
            });

            $DepartmentCode.on('change', function (e) {
                const selectedDepartment = $DepartmentCode.select2('data');
                if (!isVariableHaveDefaltVal(selectedDepartment)) {
                    $DepartmentName.val(selectedDepartment[0].text);
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('button[name=btnDeleteCurrentFile]').click(function () {
                const id = this.getAttribute("data-document");
                const fileName = this.getAttribute("data-file");
                const $element = $(this);
                $.ajax({
                    url: `${hostUrl}/api/documents/deletefile`,
                    type: "POST",
                    data: JSON.stringify({
                        id: id,
                        fileName: fileName
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (event, settings, xhr) {
                        const tr = $element.closest('tr');
                        tr.remove();
                        xhr.message = {
                            infor: 'Xóa file thành công',
                            returnUrl: undefined
                        };
                    }
                });
            });
        });
    </script>
}
